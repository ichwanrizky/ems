// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model menu_group {
  id         Int      @id @default(autoincrement())
  menu_group String   @unique
  urut       Int?
  group      Boolean?
  parent_id  String?
  menu       menu[]

  @@index([menu_group, urut, parent_id])
}

model menu {
  id            Int        @id @default(autoincrement())
  menu          String?
  path          String?
  last_path     String?
  urut          Int?
  menu_group_id Int
  menu_group    menu_group @relation(fields: [menu_group_id], references: [id])
  access        access[]

  @@index([urut, menu_group_id])
}

model roles {
  id                    Int                     @id @default(autoincrement())
  role_name             String                  @unique
  access_department     access_department[]
  access_sub_department access_sub_department[]
  access                access[]
  user                  user[]
}

model department {
  id                 Int                  @id @default(autoincrement())
  nama_department    String               @unique
  latitude           String?
  longitude          String?
  radius             String?
  created_at         DateTime?            @db.DateTime(0)
  is_deleted         Boolean              @default(false)
  sub_department     sub_department[]
  access_department  access_department[]
  shift              shift[]
  pegawai            pegawai[]
  pengajuan_izin     pengajuan_izin[]
  izin               izin[]
  tanggal_merah      tanggal_merah[]
  pengajuan_overtime pengajuan_overtime[]
  overtime           overtime[]
  komponen_gaji      komponen_gaji[]
  adjustment         adjustment[]
  gaji_pegawai       gaji_pegawai[]
  pph21              pph21[]
}

model sub_department {
  id                    Int                     @id @default(autoincrement())
  nama_sub_department   String                  @unique
  created_at            DateTime?               @db.DateTime(0)
  is_deleted            Boolean                 @default(false)
  department_id         Int
  department            department              @relation(fields: [department_id], references: [id])
  leader                Int?
  leader_user           user?                   @relation("leader_user", fields: [leader], references: [id])
  supervisor            Int?
  supervisor_user       user?                   @relation("supervisor_user", fields: [supervisor], references: [id])
  manager               Int?
  manager_user          user?                   @relation("manager_user", fields: [manager], references: [id])
  access_sub_department access_sub_department[]
  pegawai               pegawai[]
  akses_izin            akses_izin[]
  pengajuan_overtime    pengajuan_overtime[]
}

model jenis_izin {
  kode           String           @id @unique
  jenis          String
  is_jam         Boolean          @default(false)
  akses_izin     akses_izin[]
  pengajuan_izin pengajuan_izin[]
  izin           izin[]
}

model akses_izin {
  id                Int            @id @default(autoincrement())
  sub_department_id Int
  sub_department    sub_department @relation(fields: [sub_department_id], references: [id])
  jenis_izin_kode   String
  jenis_izin        jenis_izin     @relation(fields: [jenis_izin_kode], references: [kode])
}

model access_department {
  role_id       Int
  roles         roles      @relation(fields: [role_id], references: [id])
  department_id Int
  department    department @relation(fields: [department_id], references: [id])

  @@id([role_id, department_id])
}

model access_sub_department {
  role_id           Int
  roles             roles          @relation(fields: [role_id], references: [id])
  sub_department_id Int
  sub_department    sub_department @relation(fields: [sub_department_id], references: [id])

  @@id([role_id, sub_department_id])
}

model access {
  role_id Int
  roles   roles   @relation(fields: [role_id], references: [id])
  menu_id Int
  menu    menu    @relation(fields: [menu_id], references: [id])
  view    Boolean @default(false)
  insert  Boolean @default(false)
  update  Boolean @default(false)
  delete  Boolean @default(false)

  @@id([role_id, menu_id])
}

model user {
  id                 Int                  @id @default(autoincrement())
  username           String               @unique
  password           String
  name               String?
  telp               String?
  role_id            Int?
  roles              roles?               @relation(fields: [role_id], references: [id])
  created_at         DateTime?            @db.DateTime(0)
  is_deleted         Boolean              @default(false)
  pegawai_id         Int?
  pegawai            pegawai?             @relation(fields: [pegawai_id], references: [id])
  leader_user        sub_department[]     @relation("leader_user")
  supervisor_user    sub_department[]     @relation("supervisor_user")
  manager_user       sub_department[]     @relation("manager_user")
  pengajuan_izin     pengajuan_izin[]     @relation("user_approved")
  session_mobile     session_mobile[]
  pengajuan_overtime pengajuan_overtime[]

  @@index([username], map: "user_username")
  @@index([role_id], map: "user_role_id")
}

model session_mobile {
  id         Int       @id @default(autoincrement())
  token      String    @unique @db.VarChar(500)
  created_at DateTime? @db.DateTime(0)
  expired    Boolean   @default(false)
  user_id    Int
  user       user      @relation(fields: [user_id], references: [id])

  @@unique([user_id, token])
}

model shift {
  id            Int        @id @default(autoincrement())
  jam_masuk     DateTime?  @db.Time(0)
  jam_pulang    DateTime?  @db.Time(0)
  keterangan    String?
  different_day Boolean    @default(false)
  cond_friday   Int        @default(0)
  department_id Int
  department    department @relation(fields: [department_id], references: [id])
  pegawai       pegawai[]
  absen         absen[]
}

model pegawai {
  id                         Int                          @id @default(autoincrement())
  panji_id                   String?
  nama                       String
  nik_ktp                    String
  tmp_lahir                  String?
  tgl_lahir                  DateTime?                    @db.Date
  jk                         String
  agama                      String?
  kebangsaan                 String?
  alamat                     String?
  rt                         String?
  rw                         String?
  kel                        String?
  kec                        String?
  kota                       String?
  telp                       String
  status_nikah               String
  email                      String?
  position                   String?
  npwp                       String?
  jenis_bank                 String?
  no_rek                     String?
  bpjs_tk                    String?
  bpjs_kes                   String?
  is_active                  Boolean                      @default(true)
  is_deleted                 Boolean                      @default(false)
  type_gaji                  String                       @default("nonfixed")
  is_overtime                Boolean                      @default(false)
  tgl_join                   DateTime?                    @db.Date
  department_id              Int
  department                 department                   @relation(fields: [department_id], references: [id])
  sub_department_id          Int?
  sub_department             sub_department?              @relation(fields: [sub_department_id], references: [id])
  shift_id                   Int?
  shift                      shift?                       @relation(fields: [shift_id], references: [id])
  user                       user[]
  pegawai_history            pegawai_history[]
  absen                      absen[]
  pengajuan_izin             pengajuan_izin[]
  izin                       izin[]
  request_session_izin       request_session_izin[]
  pengajuan_overtime_pegawai pengajuan_overtime_pegawai[]
  overtime                   overtime[]
  master_gaji_pegawai        master_gaji_pegawai[]
  adjustment                 adjustment[]
  gaji_pegawai               gaji_pegawai[]
  gaji                       gaji[]
  pph21                      pph21[]
}

model pegawai_history {
  id         Int                   @id @default(autoincrement())
  pegawai_id Int
  pegawai    pegawai               @relation(fields: [pegawai_id], references: [id])
  tanggal    DateTime              @db.Date
  jenis      pegawai_history_jenis
}

enum pegawai_history_jenis {
  JOIN
  REGISN
}

model absen {
  id           Int       @id @default(autoincrement())
  tanggal      DateTime? @db.Date()
  absen_masuk  DateTime? @db.Time()
  absen_pulang DateTime? @db.Time()
  late         Int       @default(0)
  early        Int       @default(0)
  bulan        Int
  tahun        Int
  latitude     String?
  longitude    String?
  ket_masuk    String?
  ket_pulang   String?
  is_manual    Boolean   @default(false)
  pegawai_id   Int
  pegawai      pegawai   @relation(fields: [pegawai_id], references: [id])
  shift_id     Int?
  shift        shift?    @relation(fields: [shift_id], references: [id])

  @@unique([pegawai_id, tanggal])
}

model pengajuan_izin {
  id              Int        @id @default(autoincrement())
  uuid            String     @unique @default(uuid())
  jenis_izin_kode String
  jenis_izin      jenis_izin @relation(fields: [jenis_izin_kode], references: [kode])
  tanggal         DateTime?  @db.Date
  pegawai_id      Int
  pegawai         pegawai    @relation(fields: [pegawai_id], references: [id])
  status          Int        @default(0)
  bulan           Int
  tahun           Int
  keterangan      String?
  jumlah_hari     String?
  jumlah_jam      String?
  approve_by      Int?
  approve_date    DateTime?  @db.DateTime(0)
  user_approved   user?      @relation("user_approved", fields: [approve_by], references: [id])
  department_id   Int
  department      department @relation(fields: [department_id], references: [id])
  izin            izin[]
}

model izin {
  id                Int            @id @default(autoincrement())
  jenis_izin_kode   String
  jenis_izin        jenis_izin     @relation(fields: [jenis_izin_kode], references: [kode])
  tanggal           DateTime       @db.Date
  pegawai_id        Int
  pegawai           pegawai        @relation(fields: [pegawai_id], references: [id])
  bulan             Int
  tahun             Int
  keterangan        String?
  jumlah_hari       String?
  jumlah_jam        String?
  pengajuan_izin_id Int
  pengajuan_izin    pengajuan_izin @relation(fields: [pengajuan_izin_id], references: [id])
  department_id     Int
  department        department     @relation(fields: [department_id], references: [id])

  @@unique([pegawai_id, tanggal, jenis_izin_kode])
}

model request_session_izin {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(uuid())
  pegawai_id Int
  pegawai    pegawai   @relation(fields: [pegawai_id], references: [id])
  created_at DateTime? @db.DateTime(0)
  expired_at DateTime? @db.DateTime(0)
  expired    Boolean   @default(false)

  @@index([uuid], map: "request_session_izin_uuid")
}

model tanggal_merah {
  id                 Int                  @id @default(autoincrement())
  bulan              Int
  tahun              Int
  department_id      Int
  department         department           @relation(fields: [department_id], references: [id])
  tanggal_merah_list tanggal_merah_list[]

  @@unique([department_id, bulan, tahun])
}

model tanggal_merah_list {
  id               Int           @id @default(autoincrement())
  tanggal          DateTime?     @db.Date
  tanggal_merah_id Int
  tanggal_nomor    String
  tanggal_merah    tanggal_merah @relation(fields: [tanggal_merah_id], references: [id])
}

model pengajuan_overtime {
  id                         Int                          @id @default(autoincrement())
  tanggal                    DateTime                     @db.Date
  jam_from                   DateTime                     @db.Time(0)
  jam_to                     DateTime                     @db.Time(0)
  department_id              Int
  department                 department                   @relation(fields: [department_id], references: [id])
  sub_department_id          Int
  sub_department             sub_department               @relation(fields: [sub_department_id], references: [id])
  job_desc                   String?
  remark                     String?
  status                     Int                          @default(0)
  bulan                      Int
  tahun                      Int
  approve_by                 Int?
  user                       user?                        @relation(fields: [approve_by], references: [id])
  approve_date               DateTime?                    @db.DateTime(0)
  pengajuan_overtime_pegawai pengajuan_overtime_pegawai[]
  overtime                   overtime[]
}

model pengajuan_overtime_pegawai {
  id                    Int                @id @default(autoincrement())
  pengajuan_overtime_id Int
  pengajuan_overtime    pengajuan_overtime @relation(fields: [pengajuan_overtime_id], references: [id])
  pegawai_id            Int
  pegawai               pegawai            @relation(fields: [pegawai_id], references: [id])

  @@unique([pengajuan_overtime_id, pegawai_id])
}

model overtime {
  id                    Int                @id @default(autoincrement())
  tanggal               DateTime           @db.Date
  pegawai_id            Int
  pegawai               pegawai            @relation(fields: [pegawai_id], references: [id])
  department_id         Int
  department            department         @relation(fields: [department_id], references: [id])
  jam                   String?
  total                 String?
  is_holiday            Boolean            @default(false)
  status                Int                @default(0)
  bulan                 Int
  tahun                 Int
  pengajuan_overtime_id Int
  pengajuan_overtime    pengajuan_overtime @relation(fields: [pengajuan_overtime_id], references: [id])
}

model komponen_gaji {
  id                  Int                   @id @default(autoincrement())
  komponen            String?
  tipe                String?
  metode              String?
  is_master           Boolean               @default(false)
  urut                Int?
  urut_tampil         Int?
  is_gaji             Boolean               @default(false)
  department_id       Int
  department          department            @relation(fields: [department_id], references: [id])
  master_gaji_pegawai master_gaji_pegawai[]
}

model master_gaji_pegawai {
  id          Int           @id @default(autoincrement())
  komponen_id Int
  komponen    komponen_gaji @relation(fields: [komponen_id], references: [id])
  pegawai_id  Int
  pegawai     pegawai       @relation(fields: [pegawai_id], references: [id])
  nominal     Int

  @@unique([komponen_id, pegawai_id])
}

model adjustment {
  id            Int        @id @default(autoincrement())
  bulan         Int
  tahun         Int
  pegawai_id    Int
  pegawai       pegawai    @relation(fields: [pegawai_id], references: [id])
  nominal       Int        @default(0)
  keterangan    String?
  jenis         String?
  department_id Int
  department    department @relation(fields: [department_id], references: [id])
}

model gaji_pegawai {
  id            Int        @id @default(autoincrement())
  uuid          String     @unique @default(uuid())
  bulan         Int
  tahun         Int
  pegawai_id    Int
  pegawai       pegawai    @relation(fields: [pegawai_id], references: [id])
  nominal       Int        @default(0)
  publish       Boolean    @default(false)
  gaji          gaji[]
  department_id Int
  department    department @relation(fields: [department_id], references: [id])
}

model gaji {
  id              Int          @id @default(autoincrement())
  bulan           Int
  tahun           Int
  pegawai_id      Int
  pegawai         pegawai      @relation(fields: [pegawai_id], references: [id])
  tipe            String?
  komponen        String?
  komponen_id     Int?
  nominal         String       @default("0")
  urut            Int
  gaji_pegawai_id Int
  gaji_pegawai    gaji_pegawai @relation(fields: [gaji_pegawai_id], references: [id])
}

model pph21 {
  id            Int        @id @default(autoincrement())
  bulan         Int
  tahun         Int
  department_id Int
  department    department @relation(fields: [department_id], references: [id])
  pegawai_id    Int
  pegawai       pegawai    @relation(fields: [pegawai_id], references: [id])
  gaji          Int        @default(0)
  pph21         Int        @default(0)
}
