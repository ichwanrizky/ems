type TaxRange = [number, number, number];
interface TaxCategory {
  [key: string]: TaxRange[];
}
const newPph = (ter: string, gaji_bruto: number) => {
  const kategori: TaxCategory = {
    TER_A: [
      [0, 5400000, 0],
      [5400000, 5650000, 0.25],
      [5650000, 5950000, 0.5],
      [5950000, 6300000, 0.75],
      [6300000, 6750000, 1],
      [6750000, 7500000, 1.25],
      [7500000, 8550000, 1.5],
      [8550000, 9650000, 1.75],
      [9650000, 10050000, 2],
      [10050000, 10350000, 2.25],
      [10350000, 10700000, 2.5],
      [10700000, 11050000, 3],
      [11050000, 11600000, 3.5],
      [11600000, 12500000, 4],
      [12500000, 13750000, 5],
      [13750000, 15100000, 6],
      [15100000, 16950000, 7],
      [16950000, 19750000, 8],
      [19750000, 24150000, 9],
      [24150000, 26450000, 10],
      [26450000, 28000000, 11],
      [28000000, 30050000, 12],
      [30050000, 32400000, 13],
    ],
    TER_B: [
      [0, 6200000, 0],
      [6200000, 6500000, 0.25],
      [6500000, 6850000, 0.5],
      [6850000, 7300000, 0.75],
      [7300000, 9200000, 1],
      [9200000, 10750000, 1.5],
      [10750000, 11250000, 2],
      [11250000, 11600000, 2.5],
      [11600000, 12600000, 3],
      [12600000, 13600000, 4],
      [13600000, 14950000, 5],
      [14950000, 16400000, 6],
      [16400000, 18450000, 7],
      [18450000, 21850000, 8],
      [21850000, 26000000, 9],
      [26000000, 27700000, 10],
      [27700000, 29350000, 11],
      [29350000, 31450000, 12],
    ],
    TER_C: [
      [0, 6600000, 0],
      [6600000, 6950000, 0.25],
      [6950000, 7350000, 0.5],
      [7350000, 7800000, 0.75],
      [7800000, 8850000, 1],
      [8850000, 9800000, 1.25],
      [9800000, 10950000, 1.5],
      [10950000, 11200000, 1.75],
      [11200000, 12050000, 2],
      [12050000, 12950000, 3],
      [12950000, 14150000, 4],
      [14150000, 15550000, 5],
      [15550000, 17050000, 6],
      [17050000, 19500000, 7],
      [19500000, 22700000, 8],
      [22700000, 26600000, 9],
      [26600000, 28100000, 10],
      [28100000, 30100000, 11],
      [30100000, 32600000, 12],
    ],
  };

  if (kategori[ter]) {
    for (const range of kategori[ter]) {
      if (gaji_bruto > range[0] && gaji_bruto <= range[1]) {
        return (gaji_bruto * range[2]) / 100;
      }
    }
  }

  return 0;
};

export default newPph;
